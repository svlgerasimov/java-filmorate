DROP TABLE IF EXISTS film, users, film_genre, genre, mpa, likes, friends;

--DROP TABLE IF EXISTS mpa CASCADE;
CREATE TABLE IF NOT EXISTS mpa
(
    id INT PRIMARY KEY,
    name VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS film
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(64) NOT NULL,
    description VARCHAR(200),
    release_date DATE,
    duration INT,
    mpa_id BIGINT REFERENCES mpa (id) ON DELETE SET NULL,
    CONSTRAINT duration_check CHECK (duration > 0)
);

CREATE TABLE IF NOT EXISTS genre
(
    id INT PRIMARY KEY,
    name VARCHAR(64) NOT NULL
);

--DROP TABLE IF EXISTS film_genre;
CREATE TABLE IF NOT EXISTS film_genre
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id BIGINT REFERENCES film (id) ON DELETE CASCADE,
    genre_id BIGINT REFERENCES genre (id) ON DELETE CASCADE,
    CONSTRAINT UC_film_genre UNIQUE (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(64) NOT NULL,
    login VARCHAR(64) NOT NULL,
    name VARCHAR(64) NOT NULL,
    birthday DATE
);

--DROP TABLE IF EXISTS friends;
CREATE TABLE IF NOT EXISTS friends
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    friend_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    is_mutual BOOLEAN DEFAULT false,
    CONSTRAINT UC_friends UNIQUE (user_id, friend_id),
    CONSTRAINT friends_dif_id_check CHECK (user_id <> friend_id)
);

--DROP TABLE IF EXISTS likes;
CREATE TABLE IF NOT EXISTS likes
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id BIGINT REFERENCES film (id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT UC_likes UNIQUE (film_id, user_id)
);